var _0x1a4a=['cascade','foreign','api','UserRole','./base.model','BaseModel','primary','A\x20numeric\x20property\x20used\x20to\x20identify\x20'];(function(_0x2d158c,_0x5267c3){var _0x228c42=function(_0x247644){while(--_0x247644){_0x2d158c['push'](_0x2d158c['shift']());}};_0x228c42(++_0x5267c3);}(_0x1a4a,0xcc));var _0x292e=function(_0x2e4e91,_0xa9e967){_0x2e4e91=_0x2e4e91-0x0;var _0x36293c=_0x1a4a[_0x2e4e91];return _0x36293c;};'use strict';/*
    Required. A table that establishes a many to many relationship on table User and RoleType.
*/Object['defineProperty'](exports,'__esModule',{'value':!![]});const base_model_1=require(_0x292e('0x0'));class UserRole extends base_model_1[_0x292e('0x1')]{constructor(_0x4c0fa6,_0xe98fab,_0x4cc1fb){super(_0x4c0fa6,_0xe98fab,{'id':{'type':Number,'key':_0x292e('0x2'),'desc':_0x292e('0x3')+_0xe98fab+'\x20record.','nice_name':''},'user_id':{'type':Number,'key':'foreign','references':{'table':'User','foreignKey':'id'},'onDelete':_0x292e('0x4'),'onUpdate':_0x292e('0x4'),'desc':'','nice_name':''},'role_type_id':{'type':Number,'key':_0x292e('0x5'),'references':{'table':'RoleType','foreignKey':'id'},'onDelete':_0x292e('0x4'),'onUpdate':'cascade','desc':'','nice_name':''}},'A\x20table\x20that\x20establishes\x20a\x20many\x20to\x20many\x20relationship\x20on\x20table\x20User\x20and\x20RoleType.',[],_0x4cc1fb);this['options']=_0x4c0fa6;this['name']=_0xe98fab;this[_0x292e('0x6')]=_0x4cc1fb;}}exports[_0x292e('0x7')]=UserRole;